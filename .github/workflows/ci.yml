name: CI

on:
  pull_request:
  push:
    branches: [main, staging, trying]

env:
  CARGO_TERM_COLOR: always

jobs:
  update-deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Generate Cargo.lock
        run: cargo generate-lockfile
        
      - name: Upload Cargo.lock
        uses: actions/upload-artifact@v2
        with:
          name: lockfile
          path: Cargo.lock


  build:
    needs: update-deps
    env:
      CARGO_INCREMENTAL: 0
      RUSTC_WRAPPER: ${{ matrix.RUSTC_WRAPPER }}
      SCCACHE_DIR: ${{ matrix.SCCACHE_DIR }}
    strategy:
      matrix:
        toolchain: [stable, nightly]
        os: [windows-latest, ubuntu-latest, macos-latest]
        exclude:
          - os: macos-latest
            toolchain: nightly
          - os: windows-latest
            toolchain: nightly
        include:
        - os: macos-latest
          RUSTC_WRAPPER: ~/.cargo/bin/sccache
          SCCACHE_DIR: ~/Library/Caches/Mozilla.sccache
        - os: windows-latest
          RUSTC_WRAPPER: ~/.cargo/bin/sccache.exe
          SCCACHE_DIR: "%LOCALAPPDATA%/Mozilla/sccache"
        - os: ubuntu-latest
          RUSTC_WRAPPER: ~/.cargo/bin/sccache
          SCCACHE_DIR: ~/.cache/sccache


    runs-on: ${{ matrix.os }}    
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rustfmt, clippy
          override: true

      - name: install sccache
        run: cargo install sccache

      - name: Download Cargo.lock
        uses: actions/download-artifact@v2
        with:
          name: lockfile

      - id: target-cache
        name: Restore cache
        uses: actions/cache@v2
        with:
          path: ${{ matrix.SCCACHE_DIR }}
          key: ${{ matrix.os }}-${{ matrix.toolchain }}-build-${{ hashFiles('Cargo.lock') }}

      - name: Install alsa and udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
        if: runner.os == 'linux'

      - name: Check the format
        run: cargo fmt --all -- --check
        if: runner.os == 'linux' && matrix.toolchain == 'stable'
        
      - name: start sccache
        run: sccache --start-server

      # type complexity must be ignored because we use huge templates for queries
      # -A clippy::manual-strip: strip_prefix support was added in 1.45. we want to support earlier rust versions
      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings -A clippy::type_complexity -A clippy::manual-strip
        if: runner.os == 'linux' && matrix.toolchain == 'stable'

      - name: Build & run tests
        run: cargo test --workspace
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-C debuginfo=0 -D warnings"

      - name: stop sccache
        run: sccache --stop-server
